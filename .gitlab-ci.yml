stages:
  - build
  - lint

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo

cache:
  key: "$CI_JOB_NAME"
  untracked: true
  paths:
    - cargo/
    - target/

default:
  tags:
    - cpp
  before_script:
    - apt-get update && apt-get install -y protobuf-compiler

image: rust:latest

rust-latest:
  stage: build
  script:
    - cargo build

rust-nightly:
  stage: build
  image: rustlang/rust:nightly
  script:
    - cargo build
  allow_failure: true

rust-latest-release:
  stage: build
  script:
    - cargo build --release
  artifacts:
    untracked: false
    when: on_success
    expire_in: 30 days
    paths:
      - target/release/corroscope

clippy:
  stage: lint
  before_script:
    - rustup component add clippy
    - cargo install gitlab_clippy
  script:
    - cargo clippy
  after_script:
    - cargo clippy --message-format=json | gitlab-clippy > gl-code-quality-report.json
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    expire_in: 1 week
  rules:
    - if: '$CODE_QUALITY_DISABLED'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push"'
